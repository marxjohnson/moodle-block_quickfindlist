define("block_quickfindlist/quickfindlist",["exports","core/pending","core/templates","core/notification","core/fetch"],(function(_exports,_pending,_templates,_notification,_fetch){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let blockinstance,currentRequest;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getUserPreferences=_exports.default=void 0,_pending=_interopRequireDefault(_pending),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification),_fetch=_interopRequireDefault(_fetch);const getUserPreferences=async(blockinstanceid,search)=>{const endpoint=[blockinstanceid,"users"],request=_fetch.default.performGet("block_quickfindlist",endpoint.join("/"),{params:{search:search}});currentRequest=request;const response=await request;return request!==currentRequest?null:response.json()};_exports.getUserPreferences=getUserPreferences;const search=async(roleid,search)=>{const pending=new _pending.default("quickfindlist".concat(roleid)),progress=blockinstance.querySelector(".quickfindprogress");try{progress.style.visibility="visible";const results=await getUserPreferences(blockinstance.dataset.instanceId,search);if(!results)return pending.resolve();const{html:html,js:js}=await _templates.default.renderForPromise("block_quickfindlist/results",results);_templates.default.replaceNode(blockinstance.querySelector(".quickfindlistresults"),html,js),progress.style.visibility="hidden"}catch(e){return progress.style.visibility="hidden",_notification.default.exception(e),pending.reject()}return currentRequest=null,pending.resolve()},searchOnType=e=>{search(e.target.dataset.roleid,e.target.value)},searchOnSubmit=e=>{e.preventDefault();const searchInput=e.target.querySelector(".quickfindlistsearch");search(e.target.dataset.roleid,searchInput.value)};var _default={init(instanceid){blockinstance=document.querySelector('.block_quickfindlist[data-instance-id="'.concat(instanceid,'"]')),blockinstance.querySelector(".quickfindlistsearch").addEventListener("keyup",searchOnType),blockinstance.querySelector("form").addEventListener("submit",searchOnSubmit)}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=quickfindlist.min.js.map